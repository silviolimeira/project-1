/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.sl.config;

import com.sl.config.service.ConfigService;
import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.sql.*;

public class Config {
    public String getGreeting() {
        return "Hello World - Config!";
    }

    public static void main(String[] args) {
        //System.out.println(new Config().getGreeting());
        //getDB(1);
        System.out.println("Hello, spring");
        ApplicationContext applicationContext = new AnnotationConfigApplicationContext(AppConfig.class);
        ConfigService service = applicationContext.getBean("configService", ConfigService.class);
        System.out.println(service.list());
        
    }

    public static void test() {
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con= DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/project1?useTimezone=true&serverTimezone=UTC&useSSL=false","root","admin");
            //here sonoo is database name, root is username and password
            Statement stmt=con.createStatement();
            ResultSet rs=stmt.executeQuery("select * from config");
            while(rs.next())
                System.out.println(rs.getInt(1)+"  "+rs.getString(2)+"  "+rs.getString(3));

            con.close();
        }catch(Exception e){ System.out.println(e);}
    }

    public static String getDB(int id) {
        // ref: http://tutorials.jenkov.com/jdbc/preparedstatement.html
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection= DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/project1?useTimezone=true&serverTimezone=UTC&useSSL=false","root","admin");

            String sql = "select * from config where id=?";

            PreparedStatement preparedStatement =
                    connection.prepareStatement(sql);

            preparedStatement.setLong(1, id);

            ResultSet rs = preparedStatement.executeQuery();

            String db = null;
            if (rs.next()) {
                db = rs.getString(3);
            }

            connection.close();

            return db;

        }catch(Exception e){ System.out.println(e);}

        return null;

    }
}
